{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Search/Search.jsx","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","Search","state","query","filteredMoveisList","moviesList","this","props","searchPhrase","toLocaleLowerCase","filter","includes","htmlFor","type","id","placeholder","value","onChange","event","setState","target","React","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"2wEAIaA,G,YAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICzCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,ICrBH,IAAMK,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAFX,4CAKE,WAAU,IAGJC,EAHG,OACCC,EAAeC,KAAKC,MAApBF,WAGFG,EAFYF,KAAKJ,MAAfC,MAEmBM,oBAO3B,OALAL,EAAqBC,EAAWK,QAAO,gBAAGxB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAV,OACrCD,EAAMuB,oBAAoBE,SAASH,IAC9BrB,EAAYsB,oBAAoBE,SAASH,MAI9C,oCACE,yBAAKlB,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAOsB,QAAQ,eAAetB,UAAU,SAAxC,gBAIA,yBAAKA,UAAU,WACb,2BACEuB,KAAK,OACLC,GAAG,eACHxB,UAAU,QACVyB,YAAY,mBACZC,MAAOV,KAAKJ,MAAMC,MAClBc,SAAU,SAACC,GACT,EAAKC,SAAS,CAAEhB,MAAOe,EAAME,OAAOJ,cAO9C,kBAAC,EAAD,CAAYpB,OAAQQ,SAvC5B,GAA4BiB,IAAMC,WAsDlCrB,EAAOP,aAAe,CACpBW,WAAY,ICtDP,IAAMkB,EAAM,kBACjB,yBAAKjC,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAQe,WAAYmB,IACpB,yBAAKlC,UAAU,WAAf,wBCJNmC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8f5df469.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MoviesList } from '../MoviesList';\n\nexport class Search extends React.Component {\n  state = {\n    query: '',\n  }\n\n  render() {\n    const { moviesList } = this.props;\n    const { query } = this.state;\n    let filteredMoveisList = [];\n    const searchPhrase = query.toLocaleLowerCase();\n\n    filteredMoveisList = moviesList.filter(({ title, description }) => (\n      title.toLocaleLowerCase().includes(searchPhrase)\n        || description.toLocaleLowerCase().includes(searchPhrase)\n    ));\n\n    return (\n      <>\n        <div className=\"box\">\n          <div className=\"field\">\n            <label htmlFor=\"search-query\" className=\"label\">\n              Search movie\n            </label>\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"search-query\"\n                className=\"input\"\n                placeholder=\"Type search word\"\n                value={this.state.query}\n                onChange={(event) => {\n                  this.setState({ query: event.target.value });\n                }}\n              />\n            </div>\n          </div>\n        </div>\n\n        <MoviesList movies={filteredMoveisList} />\n      </>\n    );\n  }\n}\n\nSearch.propTypes = {\n  moviesList: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n    }),\n  ),\n};\n\nSearch.defaultProps = {\n  moviesList: [],\n};\n","import React from 'react';\nimport './App.scss';\nimport moviesFromServer from './api/movies.json';\nimport { Search } from './components/Search';\n\nexport const App = () => (\n  <div className=\"page\">\n    <div className=\"page-content\">\n      <Search moviesList={moviesFromServer} />\n      <div className=\"sidebar\">\n        Sidebar goes here\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}